parameters:
  - name: repoUrl
    type: string
    default: 'https://github.com/QoT-Solutions/safeSpeed_BackEnd.git'
  - name: testType
    type: string
    default: 'demo'
  - name: dockerImage
    type: string
    default: 'testexec'
  - name: dockerTag
    type: string
    default: '1'

trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

stages:

  - stage: DockerBuildAndPush
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: DockerJob
        steps:
          - script: |
              echo "Logging in to Docker Hub"
              docker login --username $( secrets.docker_user ) --password $ (secrets.docker_password)
            displayName: 'Docker Login'
          
          - script: |
              echo "Building Docker image"
              git clone ${{ parameters.repoUrl }} repo2
              # cd repo2
              docker build -f Dockerfile.demo repo2 -t $( secrets.docker_user )/${{ parameters.dockerImage }}:${{ parameters.dockerTag }}
            displayName: 'Build Docker Image'
            condition: eq('${{ parameters.testType }}', 'demo')
          
          - script: |
              echo "Building Docker image"
              git clone ${{ parameters.repoUrl }} repo2
              # cd repo2
              docker build -f Web/Dockerfile.web repo2 -t $( secrets.docker_user )/${{ parameters.dockerImage }}:${{ parameters.dockerTag }}
            displayName: 'Build Docker Image'
            condition: and(eq('${{ parameters.testType }}', 'web'), eq('${{ parameters.testType }}', 'web'))
          
          - script: |
              echo "Building Docker image"
              git clone ${{ parameters.repoUrl }} repo2
              # cd repo2
              docker build -f Mobile/Dockerfile.api repo2 -t $( secrets.docker_user )/${{ parameters.dockerImage }}:${{ parameters.dockerTag }}
            displayName: 'Build Docker Image'
            condition: and(eq('${{ parameters.testType }}', 'api'), eq('${{ parameters.testType }}', 'api'))
          
          - script: |
              echo "Building Docker image"
              git clone ${{ parameters.repoUrl }} repo2
              # cd repo2
              docker build -f API/Dockerfile.mob repo2 -t $( secrets.docker_user )/${{ parameters.dockerImage }}:${{ parameters.dockerTag }}
            displayName: 'Build Docker Image'
            condition: and(eq('${{ parameters.testType }}', 'mob'), eq('${{ parameters.testType }}', 'mob'))

          - script: |
              echo "Pushing Docker image to Docker Hub"
              docker push $( secrets.docker_user )/${{ parameters.dockerImage }}:${{ parameters.dockerTag }}
            displayName: 'Push Docker Image to Docker Hub'

          - script: |
              echo "Docker image pushed successfully."
            displayName: 'Echo Success'